/*--------------------------------*- C++ -*----------------------------------*\
|   OpenFOAM case constants (parametric setup)                               |
|   Used by boundary condition files via #include                            |
\*---------------------------------------------------------------------------*/

// -------------------------------------------------------------------------
// User inputs (tweak these per case)
// -------------------------------------------------------------------------

// Freestream / wheel speed
flowSpeedKPH    40;       // vehicle/wind speed [km/h]

// Flow angle (yaw)
flowAngle       0;         // [deg] 0 = aligned with x-axis

// Wheel size
wheelSizeMM     500;       // diameter of wheel [mm]

// Turbulence properties
turbulenceIntensity 0.01;  // 1% typical wind tunnel turbulence
turbLengthScale    0.07;   // [m] length scale ~ body height for Ahmed

// -------------------------------------------------------------------------
// Derived values (computed automatically)
// -------------------------------------------------------------------------

// Flow velocity in m/s
flowSpeedMS     #eval "$flowSpeedKPH / 3.6";

// Wheel speed (linear → rpm → rad/s)
wheelSpeedRPM   #eval "(60 * $flowSpeedMS) / (3.14159265359 * ($wheelSizeMM / 1000))";
wheelSpeedRadS  #eval "$wheelSpeedRPM * 0.10472";   // 2π/60 ≈ 0.10472

// Wheel angular velocity (negative ensures correct forward rotation for axis (0 1 0))
wheelOmega      #eval "$wheelSpeedRadS * -1";

// Flow components
flowX           #eval "cos(degToRad($flowAngle)) * $flowSpeedMS";
flowY           #eval "sin(degToRad($flowAngle)) * $flowSpeedMS";
flowVelocity    ($flowX $flowY 0);

// -------------------------------------------------------------------------
// Turbulence derived values
// -------------------------------------------------------------------------

// Turbulent kinetic energy: k = 1.5*(U*I)^2
turbulentKE     #eval "1.5 * pow(($flowSpeedMS * $turbulenceIntensity), 2)";

// Specific dissipation rate: ω = sqrt(k) / (Cmu^0.25 * Lt), Cmu=0.09
turbulentOmega  #eval "sqrt($turbulentKE) / (pow(0.09,0.25) * $turbLengthScale)";

// Reference pressure
pressure        0;
