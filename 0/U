/*--------------------------------*- C++ -*----------------------------------*\
|   OpenFOAM velocity boundary conditions                                    |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}

#include "include/constants"

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform $flowVelocity;

boundaryField
{
    #includeEtc "caseDicts/setConstraintTypes"

    inlet
    {
        type  fixedValue;
        value uniform $flowVelocity;       // freestream
    }

    outlet
    {
        type  zeroGradient;
    }

    ground
    {
        type  movingWallVelocity;  // Rolling road condition
        value uniform $flowVelocity;       // matches freestream
    }

    walls
    {
        type  slip;              // Car body (non-tyre parts)
    }

    // Rotating tyres (using parametric angular velocity)
    // fsaeTyreFL
    // {
    //     type    rotatingWallVelocity;
    //     origin  (0 0 0);
    //     axis    (0 1 0);
    //     omega   $wheelOmega;
    // }
    // fsaeTyreFR
    // {
    //     type    rotatingWallVelocity;
    //     origin  (0 0 0);
    //     axis    (0 1 0);
    //     omega   $wheelOmega;
    // }
    // fsaeTyreRL
    // {
    //     type    rotatingWallVelocity;
    //     origin  (0 0 0);
    //     axis    (0 1 0);
    //     omega   $wheelOmega;
    // }
    // fsaeTyreRR
    // {
    //     type    rotatingWallVelocity;
    //     origin  (0 0 0);
    //     axis    (0 1 0);
    //     omega   $wheelOmega;
    // }

    // Catch-all: any patch starting with "fsae" â†’ noSlip
    "(fsae).*"
    {
        type  noSlip;
    }
}
